# vim: ft=tmux
# 2016.01.31 Adapted from LeoMao (Pika)'s dotfiles

########################
#   General Settings   #
########################

set -s escape-time 50
set -g history-limit 10000
setw -g mode-keys vi

# Start numbering at 1
set -g base-index 1

# Termial Settings
set -g default-shell $SHELL
set -g default-command "${SHELL}"
set -g default-terminal "screen-256color"

# Prevent auto-rename after manually rename
set -g allow-rename off

# Automatically renumber windows
set -g renumber-windows on

################
#   Mappings   #
################

# Use C-a as Prefix
unbind C-b
unbind l
set -g prefix C-a
bind a send-prefix

# Vim-style
unbind p
bind p paste-buffer
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind -n S-Pageup copy-mode -eu

# Sessions
unbind n
bind n command-prompt -p "New session's name:" "new-session -s %1"
bind r command-prompt -p "Session's new name:" "rename-session %1"

# Windows
bind c new-window -c "#{pane_current_path}"
bind C-a last-window
bind h previous-window
bind l next-window
bind -n M-h previous-window
bind -n M-l next-window
bind -n M-H swap-window -t -1
bind -n M-L swap-window -t +1

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Panes
bind b split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R

# Re-Source config
bind R source-file ~/.tmux.conf \; display 'Reloaded tmux config.'

# Kill
bind k confirm -p "Kill pane #W? (y/n)" kill-pane
bind K confirm -p "Kill window #W? (y/n)" kill-window

# Disable sound bell
set -g bell-action none
# Disable visual bell
set -g visual-bell off

###############
#   Display   #
###############

# Statusbar
set -g status-interval 1
set -g status-justify left
set -g status-left-length 15
set -g status-left ' #[fg=blue,bold]#S#[default] | '
set -g status-right ' | #[fg=yellow,bold]%H:%M:%S #[fg=blue]%a %Y-%m-%d '
set -g status-style 'fg=red,bg=colour235'

# Window options
setw -g clock-mode-colour blue
setw -g clock-mode-style 24
setw -g window-status-style 'fg=white'
setw -g window-status-current-style 'fg=magenta'
setw -g window-status-activity-style 'bg=#7D0000,bright'
setw -g visual-activity off
setw -g monitor-activity on
setw -g xterm-keys on

#############
#   Mouse   #
#############

set -g mouse on

# Toggle mouse on
bind m \
         set -g mouse on \;\
         display 'Mouse: ON'

# Toggle mouse off
         bind M \
             set -g mouse off \;\
             display 'Mouse: OFF'

# Scroll
# Check if copy-mode or any mouse flags, then send mouse events
# or check if we're in alternate screen end send navigation keys (up, down)
bind -n WheelUpPane if-shell -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Up" "copy-mode -et="'
bind -n WheelDownPane if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' 'if-shell -Ft= "#{alternate_on}" \
        "send -t= Down" "send -Mt="'
